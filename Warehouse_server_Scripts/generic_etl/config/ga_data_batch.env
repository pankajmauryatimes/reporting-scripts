#!/usr/bin/ksh
set -x

export cur_proc=ga_data_batch
export batch_proc_name='GA DATA'
export now=`date +%m%d%Y-%H%M%S`
export FDAY=$3
#export FDAY=`date --date="3 day ago" +%d%b%Y`
export send_mail=Y
export batch_send_email=Y
export PROCESS_SQL=N
export LOG_DIR=$HOME/generic_etl/logs
export CONFIG_DIR=$HOME/generic_etl/config
export LOGFILE=$HOME/generic_etl/logs/ga_data_batch.log
export SPOOLFILE=$HOME/generic_etl/logs/ga_data_batch.lst
export cutoff=23:00:00
export todate=`date +%Y%m%d`
export email=sanjay.biswas@timesgroup.com,gaurav.kumar2@timesgroup.com,sachin.kumar@timesgroup.com,,gaurav.kumar2@timesgroup.com
export femail=sanjay.biswas@timesgroup.com,gaurav.kumar2@timesgroup.com,sachin.kumar@timesgroup.com,,gaurav.kumar2@timesgroup.com
export totalfiles=8
export remind=10:00:00
export remindsent=0
set -A filearr Referral.env Organic.env Email.env Aggregated_Result.env Paid.env ga_applications_crawled_jobs.env ga_applications_crawled_jobs_manual.env Direct.env
export filearr
## KETTL "JOB Job_Monthly_GA_Stat_17" execution on last feed "DIRECT.ENV File 

set -A filearr2 Referral_$FDAY.csv Paid_$FDAY.csv Email_$FDAY.csv Direct_$FDAY.csv Aggregated_Result_$FDAY.csv Organic_$FDAY.csv ga_applications_crawled_jobs_$FDAY.csv ga_applications_crawled_jobs_manual_$FDAY.csv
export filearr2 

# Check for the existance of all the data files before kick off
time=$(date +"%T")
i=0
while [[ ${i} -lt $totalfiles ]]; do

if [ -r /opt/external_source_data/ga_data/nullReferral_$FDAY.csv ]
then
   sort /opt/external_source_data/ga_data/nullReferral_$FDAY.csv |uniq > /opt/external_source_data/ga_data/Referral_$FDAY.csv
   sort /opt/external_source_data/ga_data/nullPaid_$FDAY.csv |uniq > /opt/external_source_data/ga_data/Paid_$FDAY.csv
   sort /opt/external_source_data/ga_data/nullEmail_$FDAY.csv |uniq > /opt/external_source_data/ga_data/Email_$FDAY.csv
   sort /opt/external_source_data/ga_data/nullDirect_$FDAY.csv |uniq > /opt/external_source_data/ga_data/Direct_$FDAY.csv
   sort /opt/external_source_data/ga_data/nullAggregated_Result_$FDAY.csv |uniq > /opt/external_source_data/ga_data/Aggregated_Result_$FDAY.csv
   sort /opt/external_source_data/ga_data/nullOrganic_$FDAY.csv |uniq > /opt/external_source_data/ga_data/Organic_$FDAY.csv
   sort /opt/external_source_data/ga_data/nullIndeed_$FDAY.csv |uniq > /opt/external_source_data/ga_data/Indeed_$FDAY.csv
   sort /opt/external_source_data/ga_data/nullga_applications_crawled_jobs_manual_$FDAY.csv |uniq > /opt/external_source_data/ga_data/ga_applications_crawled_jobs_manual_$FDAY.csv
   sort /opt/external_source_data/ga_data/nullga_applications_crawled_jobs_$FDAY.csv |uniq > /opt/external_source_data/ga_data/ga_applications_crawled_jobs_$FDAY.csv
fi

      currfile=${filearr2[$i]}
      echo "current file is "${currfile}
      printf "current file is ${currfile}"
      time=$(date +"%T")
      if [ -r /opt/external_source_data/ga_data/$currfile ]
      then
          #Found all the data files#
          printf "$currfile found"
          sort  /opt/external_source_data/ga_data/$currfile | uniq > /opt/external_source_data/ga_data/placeholder.log
          mv /opt/external_source_data/ga_data/placeholder.log /opt/external_source_data/ga_data/$currfile
          
          i=`expr $i + 1`
      else
      #Send a reminder
          if [ $time > $remind ] 
          then
              if [ $remindsent -eq 0 ] 
              then
              KSH_SCRIPTS_DIR=$HOME/generic_etl/ksh_scripts
              echo " Waiting for files below :" > ${LOG_DIR}/${cur_proc}.cron
		echo "" >> ${LOG_DIR}/${cur_proc}.cron 
		echo "Referral_$FDAY.csv" >> ${LOG_DIR}/${cur_proc}.cron 
		echo "Paid_$FDAY.csv " >> ${LOG_DIR}/${cur_proc}.cron 
		echo "Email_$FDAY.csv " >> ${LOG_DIR}/${cur_proc}.cron 
		echo "Direct_$FDAY.csv " >> ${LOG_DIR}/${cur_proc}.cron 
		echo "Aggregated_Result_$FDAY.csv " >> ${LOG_DIR}/${cur_proc}.cron 
		echo "Organic_$FDAY.csv" >> ${LOG_DIR}/${cur_proc}.cron
                echo "ga_applications_crawled_jobs_$FDAY.csv" >> ${LOG_DIR}/${cur_proc}.cron
                echo "ga_applications_crawled_jobs_manual_$FDAY.csv" >> ${LOG_DIR}/${cur_proc}.cron
              ${KSH_SCRIPTS_DIR}/mail $femail "Waring: $batch_proc_name process is still waiting for the file: $currfile"  ${LOG_DIR}/${cur_proc}.cron
              remindsent=1
              fi
          fi
          print "\n waiting for all files to be available for $currfile2"
          sleep 300   #wait 5 min before checking again
          time=$(date +"%T")
          printf "time is "$time
          printf "\n"
      fi
      if [[ $time > $cutoff ]]; then
          printf "$currfile not found.\n"  >> ${LOG_DIR}/${cur_proc}.cron
          printf "Process timed out before completion!\n" >> ${LOG_DIR}/${cur_proc}.cron
          printf "GA Data file has not been transfered!\n" >> ${LOG_DIR}/${cur_proc}.cron
          ${KSH_SCRIPTS_DIR}/mail $femail   "$batch_proc_name - Process Failed "  ${LOG_DIR}/${cur_proc}.cron
         exit 1
      fi
done

