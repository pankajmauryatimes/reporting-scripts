#!/usr/bin/ksh
set -x

export cur_proc=ga_monthly_data_batch
export batch_proc_name='GA MONTHLY DATA'
export now=`date +%m%d%Y-%H%M%S`
export FDAY=`date --date="1 month ago" +%Y%m`
export send_mail=Y
export PROCESS_SQL=N
export LOG_DIR=$HOME/generic_etl/logs
export CONFIG_DIR=$HOME/generic_etl/config
export LOGFILE=$HOME/generic_etl/logs/ga_monthly_data_batch.log
export SPOOLFILE=$HOME/generic_etl/logs/ga_monthly_data_batch.lst
export cutoff=13:00:00
export todate=`date +%Y%m%d`
export email=sanjay.biswas@timesgroup.com,gaurav.kumar2@timesgroup.com
export femail=sanjay.biswas@timesgroup.com,gaurav.kumar2@timesgroup.com,arun.kumar20@timesgroup.com
export totalfiles=6
export remind=10:00:00
export remindsent=0
set -A filearr Referral_M.env Organic_M.env Email_M.env Aggregated_Result_M.env Paid_M.env Indeed_M.env Direct_M.env
export filearr
## KETTL "JOB Job_Monthly_GA_Stat_17" execution on last feed "DIRECT.ENV File 

set -A filearr2 Referral_$FDAY.csv Paid_$FDAY.csv Email_$FDAY.csv Direct_$FDAY.csv Aggregated_Result_$FDAY.csv Organic_$FDAY.csv Indeed_$FDAY.env
export filearr2

if [ -r /opt/external_source_data/ga_data/nullReferral_$FDAY.csv ]
then
   mv /opt/external_source_data/ga_data/nullReferral_$FDAY.csv /opt/external_source_data/ga_data/Referral_$FDAY.csv
   mv /opt/external_source_data/ga_data/nullPaid_$FDAY.csv /opt/external_source_data/ga_data/Paid_$FDAY.csv
   mv /opt/external_source_data/ga_data/nullEmail_$FDAY.csv /opt/external_source_data/ga_data/Email_$FDAY.csv
   mv /opt/external_source_data/ga_data/nullDirect_$FDAY.csv /opt/external_source_data/ga_data/Direct_$FDAY.csv
   mv /opt/external_source_data/ga_data/nullAggregated_Result_$FDAY.csv /opt/external_source_data/ga_data/Aggregated_Result_$FDAY.csv
   mv /opt/external_source_data/ga_data/nullOrganic_$FDAY.csv /opt/external_source_data/ga_data/Organic_$FDAY.csv
   mv /opt/external_source_data/ga_data/nullIndeed_$FDAY.csv /opt/external_source_data/ga_data/Indeed_$FDAY.csv
fi

# Check for the existance of all the data files before kick off
time=$(date +"%T")
i=0
if [ -r /home/dwhuser/generic_etl/job_complete/${cur_proc}_${FDAY}.done ]
 then   echo "Feed has been already Executed for this month"
        exit 1
else
  while [[ ${i} -lt $totalfiles ]]; do
      currfile=${filearr2[$i]}
      echo "current file is "${currfile}
      printf "current file is ${currfile}"
      time=$(date +"%T")
      if [ -r /opt/external_source_data/ga_data/$currfile ]
      then
          #Found all the data files#
          printf "$currfile found"
          touch /home/dwhuser/generic_etl/job_complete/${cur_proc}_${FDAY}.done
          i=`expr $i + 1`
      else
      #Send a reminder
          if [ $time > $remind ] 
          then
              if [ $remindsent -eq 0 ] 
              then
              KSH_SCRIPTS_DIR=$HOME/generic_etl/ksh_scripts
              ${KSH_SCRIPTS_DIR}/mail $femail "CAUTION: $batch_proc_name process is still waiting for the file: $currfile"  ${LOG_DIR}/${cur_proc}.cron
              remindsent=1
              fi
          fi
          print "waiting for all files to be available for $currfile2"
          sleep 300   #wait 5 min before checking again
          time=$(date +"%T")
          printf "time is "$time
          printf "\n"
      fi
      if [[ $time > $cutoff ]]; then
          printf "$currfile not found.\n"  >> ${LOG_DIR}/${cur_proc}.cron
          printf "Process timed out before completion!\n" >> ${LOG_DIR}/${cur_proc}.cron
          printf "Monthly GA Data file has not been transfered!\n" >> ${LOG_DIR}/${cur_proc}.cron
          ${KSH_SCRIPTS_DIR}/mail $femail   "$batch_proc_name - Process Warning "  ${LOG_DIR}/${cur_proc}.cron
         exit 1
      fi
  done
fi

