export to /home/datareq/generic_etl/wip/total_logins_new_rep.csv of del modified by coldel, datesiso select 'TOTAL LOGINS' as KPI, 'NEW' as USER_TYPE, T.YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE, count(T.LOGIN_SRL_NO) as TOTAL_LOGIN from (select (YEAR(LOGIN_TIME) * 100 + MONTH(LOGIN_TIME)) as YEAR1, LOGIN_SRL_NO, trim(VISIT_SOURCE) as VISIT_SOURCE, case when VISIT_SOURCE = 'paid' then CATEGORY_VALUE when VISIT_SOURCE = 'unpaid' then 'NA' else null end as CATEGORY_VALUE from LOGIN_USAGE_HISTORY where DATE(LOGIN_TIME) between char(((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) ,ISO)||' 00:00:00.00' and char((((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) ,ISO)||' 23:59:59.99') T, USER U, USER_AD UA where T.LOGIN_SRL_NO = U.LOGIN_SRL_NO and U.LOGIN_SRL_NO = UA.LOGIN_SRL_NO and UA.SUB_CAT_ID = 2711 and U.LOGIN_CREATE_DATE between ((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) and (((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) group by T.YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE with ur

export to /home/datareq/generic_etl/wip/unique_logins_new_rep.csv of del modified by coldel, datesiso select 'UNIQUE LOGINS' as KPI, 'NEW' as USER_TYPE, (YEAR(T.LOGIN_TIME) * 100 + MONTH(T.LOGIN_TIME)) as YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE, count(distinct T.LOGIN_SRL_NO) from (select LOGIN_SRL_NO, trim(VISIT_SOURCE) as VISIT_SOURCE, case when VISIT_SOURCE = 'paid' then CATEGORY_VALUE when VISIT_SOURCE = 'unpaid' then 'NA' else null end as CATEGORY_VALUE, min(LOGIN_TIME) as LOGIN_TIME from LOGIN_USAGE_HISTORY where LOGIN_TIME between char(((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) ,ISO)||' 00:00:00.00' and char((((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) ,ISO)||' 23:59:59.99' group by LOGIN_SRL_NO, VISIT_SOURCE, case when VISIT_SOURCE = 'paid' then CATEGORY_VALUE when VISIT_SOURCE = 'unpaid' then 'NA' else null end) T, USER U, USER_AD UA where T.LOGIN_SRL_NO = U.LOGIN_SRL_NO and U.LOGIN_SRL_NO = UA.LOGIN_SRL_NO and UA.SUB_CAT_ID = 2711 and U.LOGIN_CREATE_DATE between ((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) and (((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) group by (YEAR(T.LOGIN_TIME) * 100 + MONTH(T.LOGIN_TIME)), T.VISIT_SOURCE, T.CATEGORY_VALUE with ur

export to /home/datareq/generic_etl/wip/total_applications_new_rep.csv of del modified by coldel, datesiso select 'TOTAL APPLICATIONS' as KPI, 'NEW' as USER_TYPE, T.YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE, count(sir.RESUME_ID) from USER_AD ua, USER u, SITE_INBOX_RESPONSE sir, (select (YEAR(LOGIN_TIME) * 100 + MONTH(LOGIN_TIME)) as YEAR1, LOGIN_SRL_NO, trim(VISIT_SOURCE) as VISIT_SOURCE, case when VISIT_SOURCE = 'paid' then CATEGORY_VALUE when VISIT_SOURCE = 'unpaid' then 'NA' else null end as CATEGORY_VALUE from LOGIN_USAGE_HISTORY where DATE(LOGIN_TIME) between char(((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) ,ISO)||' 00:00:00.00' and char((((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) ,ISO)||' 23:59:59.99') T where T.LOGIN_SRL_NO = U.LOGIN_SRL_NO and u.LOGIN_SRL_NO = ua.LOGIN_SRL_NO and ua.AD_ID = sir.RESUME_ID and UA.SUB_CAT_ID = 2711 and U.LOGIN_CREATE_DATE between ((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) and (((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) and sir.DATE_RESPONDED between ((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) and (((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) group by T.YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE with ur

export to /home/datareq/generic_etl/wip/profile_update_new_rep.csv of del modified by coldel, datesiso select 'PROFILE UPDATE' as KPI, 'NEW' as USER_TYPE, T.YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE, count(T.LOGIN_SRL_NO) from (select (YEAR(LOGIN_TIME) * 100 + MONTH(LOGIN_TIME)) as YEAR1, LOGIN_SRL_NO, trim(VISIT_SOURCE) as VISIT_SOURCE, case when VISIT_SOURCE = 'paid' then CATEGORY_VALUE when VISIT_SOURCE = 'unpaid' then 'NA' else null end as CATEGORY_VALUE from LOGIN_USAGE_HISTORY where DATE(LOGIN_TIME) between char(((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) ,ISO)||' 00:00:00.00' and char((((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) ,ISO)||' 23:59:59.99') T, USER U, USER_AD UA where T.LOGIN_SRL_NO = U.LOGIN_SRL_NO and U.LOGIN_SRL_NO = UA.LOGIN_SRL_NO and UA.SUB_CAT_ID = 2711 and U.LOGIN_CREATE_DATE between ((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) and (((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) and DATE(UA.LAST_MODIFIED_TIME) > U.LOGIN_CREATE_DATE group by T.YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE with ur

export to /home/datareq/generic_etl/wip/total_logins_old_rep.csv of del modified by coldel, datesiso select 'TOTAL LOGINS' as KPI, 'EXISTING' as USER_TYPE, T.YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE, count(T.LOGIN_SRL_NO) as TOTAL_LOGIN from (select (YEAR(LOGIN_TIME) * 100 + MONTH(LOGIN_TIME)) as YEAR1, LOGIN_SRL_NO, trim(VISIT_SOURCE) as VISIT_SOURCE, case when VISIT_SOURCE = 'paid' then CATEGORY_VALUE when VISIT_SOURCE = 'unpaid' then 'NA' else null end as CATEGORY_VALUE from LOGIN_USAGE_HISTORY where DATE(LOGIN_TIME) between char(((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) ,ISO)||' 00:00:00.00' and char((((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) ,ISO)||' 23:59:59.99') T, USER U, USER_AD UA where T.LOGIN_SRL_NO = U.LOGIN_SRL_NO and U.LOGIN_SRL_NO = UA.LOGIN_SRL_NO and UA.SUB_CAT_ID = 2711 and U.LOGIN_CREATE_DATE < ((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) group by T.YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE with ur

export to /home/datareq/generic_etl/wip/unique_logins_old_rep.csv of del modified by coldel, datesiso select 'UNIQUE LOGINS' as KPI, 'EXISTING' as USER_TYPE, (YEAR(T.LOGIN_TIME) * 100 + MONTH(T.LOGIN_TIME)) as YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE, count(distinct T.LOGIN_SRL_NO) from (select LOGIN_SRL_NO, trim(VISIT_SOURCE) as VISIT_SOURCE, case when VISIT_SOURCE = 'paid' then CATEGORY_VALUE when VISIT_SOURCE = 'unpaid' then 'NA' else null end as CATEGORY_VALUE, min(LOGIN_TIME) as LOGIN_TIME from LOGIN_USAGE_HISTORY where LOGIN_TIME between char(((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) ,ISO)||' 00:00:00.00' and char((((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) ,ISO)||' 23:59:59.99' group by LOGIN_SRL_NO, VISIT_SOURCE, case when VISIT_SOURCE = 'paid' then CATEGORY_VALUE when VISIT_SOURCE = 'unpaid' then 'NA' else null end) T, USER U, USER_AD UA where T.LOGIN_SRL_NO = U.LOGIN_SRL_NO and U.LOGIN_SRL_NO = UA.LOGIN_SRL_NO and UA.SUB_CAT_ID = 2711 and U.LOGIN_CREATE_DATE < ((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) group by (YEAR(T.LOGIN_TIME) * 100 + MONTH(T.LOGIN_TIME)), T.VISIT_SOURCE, T.CATEGORY_VALUE

export to /home/datareq/generic_etl/wip/total_applications_old_rep.csv of del modified by coldel, datesiso select 'TOTAL APPLICATIONS' as KPI, 'EXISTING' as USER_TYPE, T.YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE, count(sir.RESUME_ID) from USER_AD ua, USER u, SITE_INBOX_RESPONSE sir, (select (YEAR(LOGIN_TIME) * 100 + MONTH(LOGIN_TIME)) as YEAR1, LOGIN_SRL_NO, trim(VISIT_SOURCE) as VISIT_SOURCE, case when VISIT_SOURCE = 'paid' then CATEGORY_VALUE when VISIT_SOURCE = 'unpaid' then 'NA' else null end as CATEGORY_VALUE from LOGIN_USAGE_HISTORY where DATE(LOGIN_TIME) between char(((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) ,ISO)||' 00:00:00.00' and char((((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) ,ISO)||' 23:59:59.99') T where T.LOGIN_SRL_NO = U.LOGIN_SRL_NO and u.LOGIN_SRL_NO = ua.LOGIN_SRL_NO and ua.AD_ID = sir.RESUME_ID and sir.DATE_RESPONDED between ((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) and values (((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) and UA.SUB_CAT_ID = 2711 and U.LOGIN_CREATE_DATE < ((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) group by T.YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE with ur

export to /home/datareq/generic_etl/wip/profile_update_old_rep.csv of del modified by coldel, datesiso select 'PROFILE UPDATE' as KPI, 'EXISTING' as USER_TYPE, T.YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE, count(T.LOGIN_SRL_NO) from (select (YEAR(LOGIN_TIME) * 100 + MONTH(LOGIN_TIME)) as YEAR1, LOGIN_SRL_NO, trim(VISIT_SOURCE) as VISIT_SOURCE, case when VISIT_SOURCE = 'paid' then CATEGORY_VALUE when VISIT_SOURCE = 'unpaid' then 'NA' else null end as CATEGORY_VALUE from LOGIN_USAGE_HISTORY where DATE(LOGIN_TIME) between char(((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) ,ISO)||' 00:00:00.00' and char((((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) ,ISO)||' 23:59:59.99') T, USER U, USER_AD UA where T.LOGIN_SRL_NO = U.LOGIN_SRL_NO and U.LOGIN_SRL_NO = UA.LOGIN_SRL_NO and UA.SUB_CAT_ID = 2711 and U.LOGIN_CREATE_DATE < ((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) and DATE(UA.LAST_MODIFIED_TIME) between char(((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS) - 1 MONTH) ,ISO)||' 00:00:00.00' and char((((CURRENT DATE - (DAY(CURRENT DATE) - 1) DAYS)) - 1 DAY) ,ISO)||' 23:59:59.99' group by T.YEAR1, T.VISIT_SOURCE, T.CATEGORY_VALUE with ur

